# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import seaborn as sns

# Load dataset
df = pd.read_csv("car_price.csv")

# Convert categorical data to numbers
df["Fuel_Type"] = df["Fuel_Type"].map({"Petrol": 0, "Diesel": 1})
df["Transmission"] = df["Transmission"].map({"Manual": 0, "Automatic": 1})

# Select features (X) and target (y)
X = df[["Year", "Present_Price", "Kms_Driven", "Fuel_Type", "Transmission"]]
y = df["Selling_Price"]

# Split data for training and testing
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict test set prices
y_pred = model.predict(X_test)

# Show model accuracy
accuracy = model.score(X_test, y_test) * 100
print(f"Model Accuracy: {accuracy:.2f}%")

# Make a prediction for a new car
new_car = [[2018, 7.5, 30000, 1, 0]]  # Example input (Year, Price, Km, Diesel=1, Manual=0)
predicted_price = model.predict(new_car)
print(f"Predicted Selling Price: {predicted_price[0]:.2f} lakhs")

# Visualization - Actual vs Predicted Prices
plt.figure(figsize=(8,5))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel("Actual Selling Price")
plt.ylabel("Predicted Selling Price")
plt.title("Actual vs Predicted Car Prices")
plt.show()
